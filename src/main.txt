#include <Arduino.h>
#include <U8g2lib.h>

//Constants
const uint32_t interval = 100; //Display update interval

//Pin definitions
//Row select and enable
const int RA0_PIN = D3;
const int RA1_PIN = D6;
const int RA2_PIN = D12;
const int REN_PIN = A5;

//Matrix input and output
const int C0_PIN = A2;
const int C1_PIN = D9;
const int C2_PIN = A6;
const int C3_PIN = D1;
const int OUT_PIN = D11;

//Audio analogue out
const int OUTL_PIN = A4;
const int OUTR_PIN = A3;

//Joystick analogue in
const int JOYY_PIN = A0;
const int JOYX_PIN = A1;

//Output multiplexer bits
const int DEN_BIT = 3;
const int DRST_BIT = 4;
const int HKOW_BIT = 5;
const int HKOE_BIT = 6;

//Display driver object
U8G2_SSD1305_128X32_NONAME_F_HW_I2C u8g2(U8G2_R0);

//Function to select a row of the switch matrix
void setRow(uint8_t rowIdx) {
  // disable row select
  digitalWrite(REN_PIN, LOW);
  
  // set row select addresses low
  digitalWrite(RA0_PIN, (rowIdx & 0x01));
  digitalWrite(RA1_PIN, (rowIdx & 0x02));
  digitalWrite(RA2_PIN, (rowIdx & 0x04));
  
  // enable row select
  digitalWrite(REN_PIN, HIGH);
}

//Function to read the inputs from the columns of the switch matrix
uint8_t readCols() {
  uint8_t result = 0;
  
  // read column 0
  if (digitalRead(C0_PIN) == HIGH) {
    result |= 0b0001;
  }
  
  // read column 1
  if (digitalRead(C1_PIN) == HIGH) {
    result |= 0b0010;
  }
  
  // read column 2
  if (digitalRead(C2_PIN) == HIGH) {
    result |= 0b0100;
  }
  
  // read column 3
  if (digitalRead(C3_PIN) == HIGH) {
    result |= 0b1000;
  }
  
  return result;
}

void setup() {
  // put your setup code here, to run once:

  //Set pin directions
  pinMode(RA0_PIN, OUTPUT);
  pinMode(RA1_PIN, OUTPUT);
  pinMode(RA2_PIN, OUTPUT);
  pinMode(REN_PIN, OUTPUT);
  pinMode(OUT_PIN, OUTPUT);
  pinMode(OUTL_PIN, OUTPUT);
  pinMode(OUTR_PIN, OUTPUT);
  pinMode(LED_BUILTIN, OUTPUT);

  pinMode(C0_PIN, INPUT);
  pinMode(C1_PIN, INPUT);
  pinMode(C2_PIN, INPUT);
  pinMode(C3_PIN, INPUT);
  pinMode(JOYX_PIN, INPUT);
  pinMode(JOYY_PIN, INPUT);

//Initialise display
  setRow(DRST_BIT);  //Assert display logic reset
  delayMicroseconds(2);
  setRow(DRST_BIT);  //Release display logic reset
  u8g2.begin();
  setRow(DEN_BIT);  //Enable display power supply

  //Initialise UART
  Serial.begin(9600);
  Serial.println("Hello World");
}


void loop() {
  // put your main code here, to run repeatedly:
  static uint32_t next = millis();
  static uint32_t count = 0;
  uint8_t keyArray[7];
  
  while (millis() < next);  //Wait for next interval
  next += interval;

  //Update display
  u8g2.clearBuffer();         // clear the internal memory
  u8g2.setFont(u8g2_font_ncenB08_tr); // choose a suitable font
  
  // Scan each row of the key matrix and store the result in keyArray
  for (int i = 0; i < 3; i++) {
    setRow(i);
    delayMicroseconds(3);
    keyArray[i] = readCols();
  }
  
  // Print the first three elements of keyArray in hexadecimal format
  u8g2.setCursor(2,10);
  for (int i = 0; i < 3; i++) {
    if (keyArray[i] < 0x10) {
      u8g2.print("0");
    }
    u8g2.print(keyArray[i], HEX);
  }
  
  u8g2.sendBuffer();          // transfer internal memory to the display

  //Toggle LED
  digitalToggle(LED_BUILTIN);
  
}

